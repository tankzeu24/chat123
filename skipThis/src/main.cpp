#include <iostream>
#include <string>
#include "Terminal.h"
#include "Variable.h"
#include "ContextFreeGrammar.h"
#include "WordBelongsToLanguageMethodSelector.h"
#include "IRightHandSideElement.h"
#include "PushdownAutomaton.h"
using namespace std;

int main()
{





       ContextFreeGrammar cfg;
       cfg << "{A}->{B}"
				<< "{B}->{C}"
				<< "{C}->{A}"
				<< "{A}->@";

			cfg.eliminateCyclicUnitRules();
			//cfg.printRules();


        /*
        ContextFreeGrammar cfg;

			cfg << "{A}->{B}"
				<< "{B}->{C}"
				<< "{C}->{D}"
				<< "{D}->a{N}"
				<< "{B}->c";

			cfg.eliminateUncyclicUnitRules();
			*/

      /*

      ContextFreeGrammar cfg;

			cfg << "{A}->{B}"
				<< "{B}->{C}"
				<< "{C}->{D}"
				<< "{D}->a{N}"
				<< "{B}->c";

			cfg.eliminateUncyclicUnitRules();

			*/
			/*

			ContextFreeGrammar cfg;



			cfg << "{A}->{A}bc"
				<< "{A}->a";

			cfg.eliminateMixedRules();
			//cout<<"----"<<<endl;
			//cfg.printRules();

         */
         /*
             ContextFreeGrammar cfg;

			ContextFreeGrammar::autoGeneratedVariables = 0;

			cfg << "{A}->{B}{C}{D}";

			cfg.eliminateRulesWithLongRightSide();

			cfg.printRules();
         */
         /*
         ContextFreeGrammar cfg1, cfg2, result;


			cfg1<< "I{S1}"
			     << "{S1}->a";

			cfg2 << "I{S2}"
			     << "{S2}->b";
			cout<<"------"<<endl;


			result.createAsConcatenationOf(cfg1, cfg2);
             cout<<"--------"<<endl;
			result.printRules();



           */
           /*
		ContextFreeGrammar cfg;

			cfg << "I{S}"
				<< "{S}->a{S}a"
				<< "{S}->b{S}b"
				<< "{S}->c";



			cfg.wordBelongsToLanguage("abbcbba").usingPushdownAutomaton();
			*/

           /*
			ContextFreeGrammar cfg;

			cfg << "I{S}"
                <<"{S}->{S}{A}"
                <<"{S}->{A}{B}"
                <<"{A}->{B}{S}"
                <<"{B}->{S}{A}"
                <<"{S}->a"
                <<"{A}->a"
                <<"{B}->a";


               //  cout<< cfg.isChomskyNormal();

			// this grammar generates words that contain only 'a'
			WordBelongsToLanguageMethodSelector checker(cfg, "abbaa");
			checker.usingCYK();
             */










	return 0;
}
